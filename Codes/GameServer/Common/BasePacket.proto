package Packet;

enum PacketType
{
	REQ_LOGIN = 100;
	RES_LOGIN = 101;
	REQ_CREATE_ACCOUNT = 102;
	RES_CREATE_ACCOUNT = 103;
	RES_USER_INFO = 201;
	REQ_USER_INFO = 202;
	RES_CREATE_ACCOUNT_S2S = 104;
	REQ_CREATE_ACCOUNT_S2S = 105;
	REQ_LOGIN_S2S = 106;
	RES_LOGIN_S2S = 107;

	REQ_CHANNEL_LIST = 201;
	RES_CHANNEL_LIST = 202;
	REQ_ENTER_CHANNEL = 203;
	RES_ENTER_CHANNEL = 204;
	REQ_CHANNEL_INFO_S2S = 210;
	RES_CHANNEL_INFO_S2S = 211;
}




message Person {
  required string name = 1;
  required int32 id = 2;
  optional string email = 3;

  enum PhoneType {
    MOBILE = 0;
    HOME = 1;
    WORK = 2;
  }


message PhoneNumber {
    required string number = 1;
    optional PhoneType type = 2 [default = HOME];
  }

  repeated PhoneNumber phone = 4;
}

message PACKET_REQ_CREATE_ACCOUNT
{
	retuired string login_id;
}



struct PACEKT_REQ_CREATE_ACCOUNT : public PACKET_HEADER
{
	void Init()
	{
		Id = REQ_CREATE_ACCOUNT;
		Size = sizeof(PACEKT_REQ_CREATE_ACCOUNT);
	}

	char login_id[12];
	char password[12];
	char username[12];

	unsigned char weight;
	bool gender;
	unsigned int birthday;
};

struct PACKET_RES_CREATE_ACCOUNT : public PACKET_HEADER
{
    void Init()
    {
        Id = RES_CREATE_ACCOUNT;
        Size = sizeof(PACKET_RES_CREATE_ACCOUNT);
    }

	short result;
};

struct PACKET_REQ_LOGIN : public PACKET_HEADER
{
    void Init()
    {
        Id = REQ_LOGIN;
        Size = sizeof(PACKET_REQ_LOGIN);
    }

	char login_id[12];
	char password[12];
};

struct PACKET_RES_LOGIN : public PACKET_HEADER
{
    void Init()
    {
        Id = RES_LOGIN;
        Size = sizeof(PACKET_RES_LOGIN);
    }

    short result;
	char lobby_ip[15];
	short port;
};

struct PACEKT_REQ_USER_INFO : public PACKET_HEADER
{
    void Init()
    {
        Id = RES_USER_INFO;
        Size = sizeof(PACEKT_REQ_USER_INFO);
    }

	short session_id;

	char login_id[12];
	char password[12];
};

struct PACKET_RES_USER_INFO : public PACKET_HEADER
{
    void Init()
    {
        Id = RES_USER_INFO;
        Size = sizeof(PACKET_RES_USER_INFO);
    }

	short session_id;
    User user;
};

struct PACKET_REQ_CREATE_ACCOUNT_S2S : public PACKET_HEADER
{
    void Init()
    {
		Id = REQ_CREATE_ACCOUNT_S2S;
		Size = sizeof(PACKET_REQ_CREATE_ACCOUNT_S2S);
    }  

	short session_id;
	char login_id[12];
	char password[12];
	char username[12];
	unsigned char weight;
	bool gender;
	double birthday;
};

struct PACKET_RES_CREATE_ACOUNT_S2S : public PACKET_HEADER
{
    void Init()
    {
		Id = RES_CREATE_ACCOUNT_S2S;
		Size = sizeof(PACKET_RES_CREATE_ACOUNT_S2S);
    }

	short session_id;
    int result;
};

struct PACKET_REQ_LOGIN_S2S : public PACKET_HEADER
{
	void Init()
	{
		Id = REQ_LOGIN_S2S;
		Size = sizeof(PACKET_REQ_LOGIN_S2S);
	}

	short session_id;
	char login_id[12];
	char password[12];
};

struct PACKET_RES_LOGIN_S2S : public PACKET_HEADER
{
	void Init()
	{
		Id = RES_LOGIN_S2S;
		Size = sizeof(PACKET_RES_LOGIN_S2S);
	}
	short session_id;
	short result;
};


struct PACKET_REQ_CHANNEL_LIST : public PACKET_HEADER
{
	void Init()
	{
		Id = REQ_CHANNEL_LIST;
		Size = sizeof(PACKET_REQ_CHANNEL_LIST);
	}
};

struct PACKET_RES_CHANNEL_LIST : public PACKET_HEADER
{
	void Init()
	{
		Id = RES_CHANNEL_LIST;
		Size = sizeof(PACKET_RES_CHANNEL_LIST);
	}
	char channel_name[5][12];
	char channel_ip[5][15];
	short channel_port[5];
};

struct PACKET_REQ_ENTER_CHANNEL : public PACKET_HEADER
{
	void Init()
	{
		Id = REQ_ENTER_CHANNEL;
		Size = sizeof(PACKET_REQ_ENTER_CHANNEL);
	}

	char selected_channel_id;
};

struct PACKET_RES_ENTER_CHANNEL : public PACKET_HEADER
{
	void Init()
	{
		Id = RES_ENTER_CHANNEL;
		Size = sizeof(PACKET_RES_ENTER_CHANNEL);
	}

	short result;
	char channel_ip[15];
	short port;
};

struct PACEKT_REQ_CHANNEL_INFO_S2S : public PACKET_HEADER
{
	void Init()
	{
		Id = REQ_CHANNEL_INFO_S2S;
		Size = sizeof(PACEKT_REQ_CHANNEL_INFO_S2S);
	}
};

struct PACKET_RES_CHANNEL_INFO_S2S : public PACKET_HEADER
{
	void Init()
	{
		Id = RES_CHANNEL_INFO_S2S;
		Size = sizeof(PACEKT_REQ_CHANNEL_INFO_S2S);
	}

	short capacity;
	char status;
};